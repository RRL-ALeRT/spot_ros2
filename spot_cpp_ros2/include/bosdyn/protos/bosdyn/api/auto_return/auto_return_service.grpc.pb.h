// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: bosdyn/api/auto_return/auto_return_service.proto
// Original file comments:
// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).
//
#ifndef GRPC_bosdyn_2fapi_2fauto_5freturn_2fauto_5freturn_5fservice_2eproto__INCLUDED
#define GRPC_bosdyn_2fapi_2fauto_5freturn_2fauto_5freturn_5fservice_2eproto__INCLUDED

#include "bosdyn/api/auto_return/auto_return_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace bosdyn {
namespace api {
namespace auto_return {

class AutoReturnService final {
 public:
  static constexpr char const* service_full_name() {
    return "bosdyn.api.auto_return.AutoReturnService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Configure the service.
    virtual ::grpc::Status Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::bosdyn::api::auto_return::ConfigureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>> AsyncConfigure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>>(AsyncConfigureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>> PrepareAsyncConfigure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>>(PrepareAsyncConfigureRaw(context, request, cq));
    }
    // Get the current configuration.
    virtual ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::bosdyn::api::auto_return::GetConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    // Start AutoReturn now.
    virtual ::grpc::Status Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::bosdyn::api::auto_return::StartResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>> AsyncStart(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>>(AsyncStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>> PrepareAsyncStart(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>>(PrepareAsyncStartRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Configure the service.
      virtual void Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get the current configuration.
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Start AutoReturn now.
      virtual void Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>* AsyncConfigureRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::ConfigureResponse>* PrepareAsyncConfigureRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>* AsyncStartRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::auto_return::StartResponse>* PrepareAsyncStartRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::bosdyn::api::auto_return::ConfigureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>> AsyncConfigure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>>(AsyncConfigureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>> PrepareAsyncConfigure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>>(PrepareAsyncConfigureRaw(context, request, cq));
    }
    ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::bosdyn::api::auto_return::GetConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    ::grpc::Status Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::bosdyn::api::auto_return::StartResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>> AsyncStart(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>>(AsyncStartRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>> PrepareAsyncStart(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>>(PrepareAsyncStartRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response, std::function<void(::grpc::Status)>) override;
      void Configure(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response, std::function<void(::grpc::Status)>) override;
      void Start(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>* AsyncConfigureRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::ConfigureResponse>* PrepareAsyncConfigureRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::ConfigureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>* AsyncStartRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::auto_return::StartResponse>* PrepareAsyncStartRaw(::grpc::ClientContext* context, const ::bosdyn::api::auto_return::StartRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Configure_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_Start_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Configure the service.
    virtual ::grpc::Status Configure(::grpc::ServerContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response);
    // Get the current configuration.
    virtual ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response);
    // Start AutoReturn now.
    virtual ::grpc::Status Start(::grpc::ServerContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Configure() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfigure(::grpc::ServerContext* context, ::bosdyn::api::auto_return::ConfigureRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::auto_return::ConfigureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::auto_return::GetConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Start() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStart(::grpc::ServerContext* context, ::bosdyn::api::auto_return::StartRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::auto_return::StartResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Configure<WithAsyncMethod_GetConfiguration<WithAsyncMethod_Start<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Configure() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::ConfigureRequest, ::bosdyn::api::auto_return::ConfigureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::auto_return::ConfigureRequest* request, ::bosdyn::api::auto_return::ConfigureResponse* response) { return this->Configure(context, request, response); }));}
    void SetMessageAllocatorFor_Configure(
        ::grpc::MessageAllocator< ::bosdyn::api::auto_return::ConfigureRequest, ::bosdyn::api::auto_return::ConfigureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::ConfigureRequest, ::bosdyn::api::auto_return::ConfigureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Configure(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::GetConfigurationRequest, ::bosdyn::api::auto_return::GetConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::auto_return::GetConfigurationRequest* request, ::bosdyn::api::auto_return::GetConfigurationResponse* response) { return this->GetConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfiguration(
        ::grpc::MessageAllocator< ::bosdyn::api::auto_return::GetConfigurationRequest, ::bosdyn::api::auto_return::GetConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::GetConfigurationRequest, ::bosdyn::api::auto_return::GetConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Start() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::StartRequest, ::bosdyn::api::auto_return::StartResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::auto_return::StartRequest* request, ::bosdyn::api::auto_return::StartResponse* response) { return this->Start(context, request, response); }));}
    void SetMessageAllocatorFor_Start(
        ::grpc::MessageAllocator< ::bosdyn::api::auto_return::StartRequest, ::bosdyn::api::auto_return::StartResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::auto_return::StartRequest, ::bosdyn::api::auto_return::StartResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Start(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Configure<WithCallbackMethod_GetConfiguration<WithCallbackMethod_Start<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Configure() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Start() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Configure() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfigure(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Start() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStart(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Configure() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Configure(context, request, response); }));
    }
    ~WithRawCallbackMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Configure(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Start() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Start(context, request, response); }));
    }
    ~WithRawCallbackMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Start(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Configure : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Configure() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::auto_return::ConfigureRequest, ::bosdyn::api::auto_return::ConfigureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::auto_return::ConfigureRequest, ::bosdyn::api::auto_return::ConfigureResponse>* streamer) {
                       return this->StreamedConfigure(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Configure() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Configure(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::ConfigureRequest* /*request*/, ::bosdyn::api::auto_return::ConfigureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfigure(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::auto_return::ConfigureRequest,::bosdyn::api::auto_return::ConfigureResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::auto_return::GetConfigurationRequest, ::bosdyn::api::auto_return::GetConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::auto_return::GetConfigurationRequest, ::bosdyn::api::auto_return::GetConfigurationResponse>* streamer) {
                       return this->StreamedGetConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::GetConfigurationRequest* /*request*/, ::bosdyn::api::auto_return::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::auto_return::GetConfigurationRequest,::bosdyn::api::auto_return::GetConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Start : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Start() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::auto_return::StartRequest, ::bosdyn::api::auto_return::StartResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::auto_return::StartRequest, ::bosdyn::api::auto_return::StartResponse>* streamer) {
                       return this->StreamedStart(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Start() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Start(::grpc::ServerContext* /*context*/, const ::bosdyn::api::auto_return::StartRequest* /*request*/, ::bosdyn::api::auto_return::StartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStart(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::auto_return::StartRequest,::bosdyn::api::auto_return::StartResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Configure<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_Start<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Configure<WithStreamedUnaryMethod_GetConfiguration<WithStreamedUnaryMethod_Start<Service > > > StreamedService;
};

}  // namespace auto_return
}  // namespace api
}  // namespace bosdyn


#endif  // GRPC_bosdyn_2fapi_2fauto_5freturn_2fauto_5freturn_5fservice_2eproto__INCLUDED
