// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: bosdyn/api/data_service.proto
// Original file comments:
// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).
//
// DataBufferService allows adding information to the robot's log files.
#ifndef GRPC_bosdyn_2fapi_2fdata_5fservice_2eproto__INCLUDED
#define GRPC_bosdyn_2fapi_2fdata_5fservice_2eproto__INCLUDED

#include "bosdyn/api/data_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace bosdyn {
namespace api {

// The DataService is a mechanism for querying and managing data stored on robot.
class DataService final {
 public:
  static constexpr char const* service_full_name() {
    return "bosdyn.api.DataService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Get index of current data matching a given DataQuery.
    virtual ::grpc::Status GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::bosdyn::api::GetDataIndexResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>> AsyncGetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>>(AsyncGetDataIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>> PrepareAsyncGetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>>(PrepareAsyncGetDataIndexRaw(context, request, cq));
    }
    // Get events and comments.
    virtual ::grpc::Status GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::bosdyn::api::GetEventsCommentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>> AsyncGetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>>(AsyncGetEventsCommentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>> PrepareAsyncGetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>>(PrepareAsyncGetEventsCommentsRaw(context, request, cq));
    }
    // Get basic stats on data buffer storage.
    virtual ::grpc::Status GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::bosdyn::api::GetDataBufferStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>> AsyncGetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>>(AsyncGetDataBufferStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>> PrepareAsyncGetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>>(PrepareAsyncGetDataBufferStatusRaw(context, request, cq));
    }
    // Get a list pf pages matching a given time range
    virtual ::grpc::Status GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::bosdyn::api::GetDataPagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>> AsyncGetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>>(AsyncGetDataPagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>> PrepareAsyncGetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>>(PrepareAsyncGetDataPagesRaw(context, request, cq));
    }
    // Delete a list of pages matching a given time range or page ids
    virtual ::grpc::Status DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::bosdyn::api::DeleteDataPagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>> AsyncDeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>>(AsyncDeleteDataPagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>> PrepareAsyncDeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>>(PrepareAsyncDeleteDataPagesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Get index of current data matching a given DataQuery.
      virtual void GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get events and comments.
      virtual void GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get basic stats on data buffer storage.
      virtual void GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a list pf pages matching a given time range
      virtual void GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a list of pages matching a given time range or page ids
      virtual void DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>* AsyncGetDataIndexRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataIndexResponse>* PrepareAsyncGetDataIndexRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>* AsyncGetEventsCommentsRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetEventsCommentsResponse>* PrepareAsyncGetEventsCommentsRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>* AsyncGetDataBufferStatusRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataBufferStatusResponse>* PrepareAsyncGetDataBufferStatusRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>* AsyncGetDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::GetDataPagesResponse>* PrepareAsyncGetDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>* AsyncDeleteDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::DeleteDataPagesResponse>* PrepareAsyncDeleteDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::bosdyn::api::GetDataIndexResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>> AsyncGetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>>(AsyncGetDataIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>> PrepareAsyncGetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>>(PrepareAsyncGetDataIndexRaw(context, request, cq));
    }
    ::grpc::Status GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::bosdyn::api::GetEventsCommentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>> AsyncGetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>>(AsyncGetEventsCommentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>> PrepareAsyncGetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>>(PrepareAsyncGetEventsCommentsRaw(context, request, cq));
    }
    ::grpc::Status GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::bosdyn::api::GetDataBufferStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>> AsyncGetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>>(AsyncGetDataBufferStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>> PrepareAsyncGetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>>(PrepareAsyncGetDataBufferStatusRaw(context, request, cq));
    }
    ::grpc::Status GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::bosdyn::api::GetDataPagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>> AsyncGetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>>(AsyncGetDataPagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>> PrepareAsyncGetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>>(PrepareAsyncGetDataPagesRaw(context, request, cq));
    }
    ::grpc::Status DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::bosdyn::api::DeleteDataPagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>> AsyncDeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>>(AsyncDeleteDataPagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>> PrepareAsyncDeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>>(PrepareAsyncDeleteDataPagesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDataIndex(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEventsComments(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDataBufferStatus(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDataPages(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDataPages(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>* AsyncGetDataIndexRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataIndexResponse>* PrepareAsyncGetDataIndexRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataIndexRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>* AsyncGetEventsCommentsRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetEventsCommentsResponse>* PrepareAsyncGetEventsCommentsRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetEventsCommentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>* AsyncGetDataBufferStatusRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataBufferStatusResponse>* PrepareAsyncGetDataBufferStatusRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataBufferStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>* AsyncGetDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::GetDataPagesResponse>* PrepareAsyncGetDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::GetDataPagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>* AsyncDeleteDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::DeleteDataPagesResponse>* PrepareAsyncDeleteDataPagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::DeleteDataPagesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetDataIndex_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEventsComments_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDataBufferStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDataPages_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDataPages_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Get index of current data matching a given DataQuery.
    virtual ::grpc::Status GetDataIndex(::grpc::ServerContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response);
    // Get events and comments.
    virtual ::grpc::Status GetEventsComments(::grpc::ServerContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response);
    // Get basic stats on data buffer storage.
    virtual ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response);
    // Get a list pf pages matching a given time range
    virtual ::grpc::Status GetDataPages(::grpc::ServerContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response);
    // Delete a list of pages matching a given time range or page ids
    virtual ::grpc::Status DeleteDataPages(::grpc::ServerContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataIndex(::grpc::ServerContext* context, ::bosdyn::api::GetDataIndexRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::GetDataIndexResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEventsComments(::grpc::ServerContext* context, ::bosdyn::api::GetEventsCommentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::GetEventsCommentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataBufferStatus(::grpc::ServerContext* context, ::bosdyn::api::GetDataBufferStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::GetDataBufferStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDataPages() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataPages(::grpc::ServerContext* context, ::bosdyn::api::GetDataPagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::GetDataPagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDataPages(::grpc::ServerContext* context, ::bosdyn::api::DeleteDataPagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::DeleteDataPagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetDataIndex<WithAsyncMethod_GetEventsComments<WithAsyncMethod_GetDataBufferStatus<WithAsyncMethod_GetDataPages<WithAsyncMethod_DeleteDataPages<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataIndexRequest, ::bosdyn::api::GetDataIndexResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::GetDataIndexRequest* request, ::bosdyn::api::GetDataIndexResponse* response) { return this->GetDataIndex(context, request, response); }));}
    void SetMessageAllocatorFor_GetDataIndex(
        ::grpc::MessageAllocator< ::bosdyn::api::GetDataIndexRequest, ::bosdyn::api::GetDataIndexResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataIndexRequest, ::bosdyn::api::GetDataIndexResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetEventsCommentsRequest, ::bosdyn::api::GetEventsCommentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::GetEventsCommentsRequest* request, ::bosdyn::api::GetEventsCommentsResponse* response) { return this->GetEventsComments(context, request, response); }));}
    void SetMessageAllocatorFor_GetEventsComments(
        ::grpc::MessageAllocator< ::bosdyn::api::GetEventsCommentsRequest, ::bosdyn::api::GetEventsCommentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetEventsCommentsRequest, ::bosdyn::api::GetEventsCommentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEventsComments(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataBufferStatusRequest, ::bosdyn::api::GetDataBufferStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::GetDataBufferStatusRequest* request, ::bosdyn::api::GetDataBufferStatusResponse* response) { return this->GetDataBufferStatus(context, request, response); }));}
    void SetMessageAllocatorFor_GetDataBufferStatus(
        ::grpc::MessageAllocator< ::bosdyn::api::GetDataBufferStatusRequest, ::bosdyn::api::GetDataBufferStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataBufferStatusRequest, ::bosdyn::api::GetDataBufferStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataBufferStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDataPages() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataPagesRequest, ::bosdyn::api::GetDataPagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::GetDataPagesRequest* request, ::bosdyn::api::GetDataPagesResponse* response) { return this->GetDataPages(context, request, response); }));}
    void SetMessageAllocatorFor_GetDataPages(
        ::grpc::MessageAllocator< ::bosdyn::api::GetDataPagesRequest, ::bosdyn::api::GetDataPagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::GetDataPagesRequest, ::bosdyn::api::GetDataPagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataPages(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::DeleteDataPagesRequest, ::bosdyn::api::DeleteDataPagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::DeleteDataPagesRequest* request, ::bosdyn::api::DeleteDataPagesResponse* response) { return this->DeleteDataPages(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDataPages(
        ::grpc::MessageAllocator< ::bosdyn::api::DeleteDataPagesRequest, ::bosdyn::api::DeleteDataPagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::DeleteDataPagesRequest, ::bosdyn::api::DeleteDataPagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDataPages(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetDataIndex<WithCallbackMethod_GetEventsComments<WithCallbackMethod_GetDataBufferStatus<WithCallbackMethod_GetDataPages<WithCallbackMethod_DeleteDataPages<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDataPages() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataIndex(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEventsComments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataBufferStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDataPages() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDataPages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDataPages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDataIndex(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataIndex(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEventsComments(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEventsComments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDataBufferStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataBufferStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDataPages() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDataPages(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDataPages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDataPages(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDataPages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDataIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDataIndex() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::GetDataIndexRequest, ::bosdyn::api::GetDataIndexResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::GetDataIndexRequest, ::bosdyn::api::GetDataIndexResponse>* streamer) {
                       return this->StreamedGetDataIndex(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDataIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDataIndex(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataIndexRequest* /*request*/, ::bosdyn::api::GetDataIndexResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDataIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::GetDataIndexRequest,::bosdyn::api::GetDataIndexResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEventsComments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEventsComments() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::GetEventsCommentsRequest, ::bosdyn::api::GetEventsCommentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::GetEventsCommentsRequest, ::bosdyn::api::GetEventsCommentsResponse>* streamer) {
                       return this->StreamedGetEventsComments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEventsComments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEventsComments(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetEventsCommentsRequest* /*request*/, ::bosdyn::api::GetEventsCommentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEventsComments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::GetEventsCommentsRequest,::bosdyn::api::GetEventsCommentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDataBufferStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDataBufferStatus() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::GetDataBufferStatusRequest, ::bosdyn::api::GetDataBufferStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::GetDataBufferStatusRequest, ::bosdyn::api::GetDataBufferStatusResponse>* streamer) {
                       return this->StreamedGetDataBufferStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDataBufferStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDataBufferStatus(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataBufferStatusRequest* /*request*/, ::bosdyn::api::GetDataBufferStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDataBufferStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::GetDataBufferStatusRequest,::bosdyn::api::GetDataBufferStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDataPages() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::GetDataPagesRequest, ::bosdyn::api::GetDataPagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::GetDataPagesRequest, ::bosdyn::api::GetDataPagesResponse>* streamer) {
                       return this->StreamedGetDataPages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::GetDataPagesRequest* /*request*/, ::bosdyn::api::GetDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDataPages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::GetDataPagesRequest,::bosdyn::api::GetDataPagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDataPages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDataPages() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::DeleteDataPagesRequest, ::bosdyn::api::DeleteDataPagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::DeleteDataPagesRequest, ::bosdyn::api::DeleteDataPagesResponse>* streamer) {
                       return this->StreamedDeleteDataPages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDataPages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDataPages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::DeleteDataPagesRequest* /*request*/, ::bosdyn::api::DeleteDataPagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDataPages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::DeleteDataPagesRequest,::bosdyn::api::DeleteDataPagesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetDataIndex<WithStreamedUnaryMethod_GetEventsComments<WithStreamedUnaryMethod_GetDataBufferStatus<WithStreamedUnaryMethod_GetDataPages<WithStreamedUnaryMethod_DeleteDataPages<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetDataIndex<WithStreamedUnaryMethod_GetEventsComments<WithStreamedUnaryMethod_GetDataBufferStatus<WithStreamedUnaryMethod_GetDataPages<WithStreamedUnaryMethod_DeleteDataPages<Service > > > > > StreamedService;
};

}  // namespace api
}  // namespace bosdyn


#endif  // GRPC_bosdyn_2fapi_2fdata_5fservice_2eproto__INCLUDED
