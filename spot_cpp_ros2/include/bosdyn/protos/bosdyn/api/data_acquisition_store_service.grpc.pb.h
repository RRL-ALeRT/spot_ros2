// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: bosdyn/api/data_acquisition_store_service.proto
// Original file comments:
// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).
//
#ifndef GRPC_bosdyn_2fapi_2fdata_5facquisition_5fstore_5fservice_2eproto__INCLUDED
#define GRPC_bosdyn_2fapi_2fdata_5facquisition_5fstore_5fservice_2eproto__INCLUDED

#include "bosdyn/api/data_acquisition_store_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace bosdyn {
namespace api {

// The DataAcquisitionStoreService is used to store data (images, data, metadata) on the robot
// in association with the DataIdentifiers specified by the DataAcquisitionService. Additionally,
// requests can be made to the DataAcquisitionStoreService to identify different pieces of data or entire
// capture actions which match query parameters, such as time ranges or action/group names.
class DataAcquisitionStoreService final {
 public:
  static constexpr char const* service_full_name() {
    return "bosdyn.api.DataAcquisitionStoreService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // List all CaptureActionIds (which identify an entire AcquireData RPC's data captures)
    // that match the query parameters provided in the request.
    virtual ::grpc::Status ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::bosdyn::api::ListCaptureActionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>> AsyncListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>>(AsyncListCaptureActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>> PrepareAsyncListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>>(PrepareAsyncListCaptureActionsRaw(context, request, cq));
    }
    // List data identifiers (which identify specific pieces of data from
    // an action) for stored data that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::bosdyn::api::ListStoredDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>> AsyncListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>>(AsyncListStoredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>> PrepareAsyncListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>>(PrepareAsyncListStoredDataRaw(context, request, cq));
    }
    // Store arbitrary data associated with a DataIdentifier.
    virtual ::grpc::Status StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::bosdyn::api::StoreDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>> AsyncStoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>>(AsyncStoreDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>> PrepareAsyncStoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>>(PrepareAsyncStoreDataRaw(context, request, cq));
    }
    // Type-safe to images: list data identifiers (which identify specific images
    // from an action) for stored images that satisfy the
    // query parameters in the request.
    virtual ::grpc::Status ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::bosdyn::api::ListStoredImagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>> AsyncListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>>(AsyncListStoredImagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>> PrepareAsyncListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>>(PrepareAsyncListStoredImagesRaw(context, request, cq));
    }
    // Type-safe to images: store image data associated with a DataIdentifier.
    virtual ::grpc::Status StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::bosdyn::api::StoreImageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>> AsyncStoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>>(AsyncStoreImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>> PrepareAsyncStoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>>(PrepareAsyncStoreImageRaw(context, request, cq));
    }
    // Type-safe to JSON metadata: list data identifiers (which identify specific metadata from
    // an action) for stored metadata that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::bosdyn::api::ListStoredMetadataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>> AsyncListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>>(AsyncListStoredMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>> PrepareAsyncListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>>(PrepareAsyncListStoredMetadataRaw(context, request, cq));
    }
    // Type-safe to JSON metadata: store metadata associated with a DataIdentifier.
    virtual ::grpc::Status StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::bosdyn::api::StoreMetadataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>> AsyncStoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>>(AsyncStoreMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>> PrepareAsyncStoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>>(PrepareAsyncStoreMetadataRaw(context, request, cq));
    }
    // List data identifiers (which identify specific AlertData from
    // an action) for stored AlertData that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::bosdyn::api::ListStoredAlertDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>> AsyncListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>>(AsyncListStoredAlertDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>> PrepareAsyncListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>>(PrepareAsyncListStoredAlertDataRaw(context, request, cq));
    }
    // Store AlertData associated with a DataIdentifier.
    virtual ::grpc::Status StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::bosdyn::api::StoreAlertDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>> AsyncStoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>>(AsyncStoreAlertDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>> PrepareAsyncStoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>>(PrepareAsyncStoreAlertDataRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // List all CaptureActionIds (which identify an entire AcquireData RPC's data captures)
      // that match the query parameters provided in the request.
      virtual void ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List data identifiers (which identify specific pieces of data from
      // an action) for stored data that satisfy the query parameters in the request.
      virtual void ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Store arbitrary data associated with a DataIdentifier.
      virtual void StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Type-safe to images: list data identifiers (which identify specific images
      // from an action) for stored images that satisfy the
      // query parameters in the request.
      virtual void ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Type-safe to images: store image data associated with a DataIdentifier.
      virtual void StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Type-safe to JSON metadata: list data identifiers (which identify specific metadata from
      // an action) for stored metadata that satisfy the query parameters in the request.
      virtual void ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Type-safe to JSON metadata: store metadata associated with a DataIdentifier.
      virtual void StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List data identifiers (which identify specific AlertData from
      // an action) for stored AlertData that satisfy the query parameters in the request.
      virtual void ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Store AlertData associated with a DataIdentifier.
      virtual void StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>* AsyncListCaptureActionsRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListCaptureActionsResponse>* PrepareAsyncListCaptureActionsRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>* AsyncListStoredDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredDataResponse>* PrepareAsyncListStoredDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>* AsyncStoreDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreDataResponse>* PrepareAsyncStoreDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>* AsyncListStoredImagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredImagesResponse>* PrepareAsyncListStoredImagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>* AsyncStoreImageRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreImageResponse>* PrepareAsyncStoreImageRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>* AsyncListStoredMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredMetadataResponse>* PrepareAsyncListStoredMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>* AsyncStoreMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreMetadataResponse>* PrepareAsyncStoreMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>* AsyncListStoredAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::ListStoredAlertDataResponse>* PrepareAsyncListStoredAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>* AsyncStoreAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bosdyn::api::StoreAlertDataResponse>* PrepareAsyncStoreAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::bosdyn::api::ListCaptureActionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>> AsyncListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>>(AsyncListCaptureActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>> PrepareAsyncListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>>(PrepareAsyncListCaptureActionsRaw(context, request, cq));
    }
    ::grpc::Status ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::bosdyn::api::ListStoredDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>> AsyncListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>>(AsyncListStoredDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>> PrepareAsyncListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>>(PrepareAsyncListStoredDataRaw(context, request, cq));
    }
    ::grpc::Status StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::bosdyn::api::StoreDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>> AsyncStoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>>(AsyncStoreDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>> PrepareAsyncStoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>>(PrepareAsyncStoreDataRaw(context, request, cq));
    }
    ::grpc::Status ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::bosdyn::api::ListStoredImagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>> AsyncListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>>(AsyncListStoredImagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>> PrepareAsyncListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>>(PrepareAsyncListStoredImagesRaw(context, request, cq));
    }
    ::grpc::Status StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::bosdyn::api::StoreImageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>> AsyncStoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>>(AsyncStoreImageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>> PrepareAsyncStoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>>(PrepareAsyncStoreImageRaw(context, request, cq));
    }
    ::grpc::Status ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::bosdyn::api::ListStoredMetadataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>> AsyncListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>>(AsyncListStoredMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>> PrepareAsyncListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>>(PrepareAsyncListStoredMetadataRaw(context, request, cq));
    }
    ::grpc::Status StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::bosdyn::api::StoreMetadataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>> AsyncStoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>>(AsyncStoreMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>> PrepareAsyncStoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>>(PrepareAsyncStoreMetadataRaw(context, request, cq));
    }
    ::grpc::Status ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::bosdyn::api::ListStoredAlertDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>> AsyncListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>>(AsyncListStoredAlertDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>> PrepareAsyncListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>>(PrepareAsyncListStoredAlertDataRaw(context, request, cq));
    }
    ::grpc::Status StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::bosdyn::api::StoreAlertDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>> AsyncStoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>>(AsyncStoreAlertDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>> PrepareAsyncStoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>>(PrepareAsyncStoreAlertDataRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCaptureActions(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response, std::function<void(::grpc::Status)>) override;
      void ListStoredData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreData(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListStoredImages(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreImage(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response, std::function<void(::grpc::Status)>) override;
      void ListStoredMetadata(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreMetadata(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response, std::function<void(::grpc::Status)>) override;
      void ListStoredAlertData(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response, std::function<void(::grpc::Status)>) override;
      void StoreAlertData(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>* AsyncListCaptureActionsRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListCaptureActionsResponse>* PrepareAsyncListCaptureActionsRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListCaptureActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>* AsyncListStoredDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredDataResponse>* PrepareAsyncListStoredDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>* AsyncStoreDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreDataResponse>* PrepareAsyncStoreDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>* AsyncListStoredImagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredImagesResponse>* PrepareAsyncListStoredImagesRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredImagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>* AsyncStoreImageRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreImageResponse>* PrepareAsyncStoreImageRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreImageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>* AsyncListStoredMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredMetadataResponse>* PrepareAsyncListStoredMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>* AsyncStoreMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreMetadataResponse>* PrepareAsyncStoreMetadataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>* AsyncListStoredAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::ListStoredAlertDataResponse>* PrepareAsyncListStoredAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::ListStoredAlertDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>* AsyncStoreAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bosdyn::api::StoreAlertDataResponse>* PrepareAsyncStoreAlertDataRaw(::grpc::ClientContext* context, const ::bosdyn::api::StoreAlertDataRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListCaptureActions_;
    const ::grpc::internal::RpcMethod rpcmethod_ListStoredData_;
    const ::grpc::internal::RpcMethod rpcmethod_StoreData_;
    const ::grpc::internal::RpcMethod rpcmethod_ListStoredImages_;
    const ::grpc::internal::RpcMethod rpcmethod_StoreImage_;
    const ::grpc::internal::RpcMethod rpcmethod_ListStoredMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_StoreMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_ListStoredAlertData_;
    const ::grpc::internal::RpcMethod rpcmethod_StoreAlertData_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // List all CaptureActionIds (which identify an entire AcquireData RPC's data captures)
    // that match the query parameters provided in the request.
    virtual ::grpc::Status ListCaptureActions(::grpc::ServerContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response);
    // List data identifiers (which identify specific pieces of data from
    // an action) for stored data that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredData(::grpc::ServerContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response);
    // Store arbitrary data associated with a DataIdentifier.
    virtual ::grpc::Status StoreData(::grpc::ServerContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response);
    // Type-safe to images: list data identifiers (which identify specific images
    // from an action) for stored images that satisfy the
    // query parameters in the request.
    virtual ::grpc::Status ListStoredImages(::grpc::ServerContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response);
    // Type-safe to images: store image data associated with a DataIdentifier.
    virtual ::grpc::Status StoreImage(::grpc::ServerContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response);
    // Type-safe to JSON metadata: list data identifiers (which identify specific metadata from
    // an action) for stored metadata that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredMetadata(::grpc::ServerContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response);
    // Type-safe to JSON metadata: store metadata associated with a DataIdentifier.
    virtual ::grpc::Status StoreMetadata(::grpc::ServerContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response);
    // List data identifiers (which identify specific AlertData from
    // an action) for stored AlertData that satisfy the query parameters in the request.
    virtual ::grpc::Status ListStoredAlertData(::grpc::ServerContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response);
    // Store AlertData associated with a DataIdentifier.
    virtual ::grpc::Status StoreAlertData(::grpc::ServerContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCaptureActions(::grpc::ServerContext* context, ::bosdyn::api::ListCaptureActionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::ListCaptureActionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListStoredData() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredData(::grpc::ServerContext* context, ::bosdyn::api::ListStoredDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::ListStoredDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreData() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreData(::grpc::ServerContext* context, ::bosdyn::api::StoreDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::StoreDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredImages(::grpc::ServerContext* context, ::bosdyn::api::ListStoredImagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::ListStoredImagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreImage() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreImage(::grpc::ServerContext* context, ::bosdyn::api::StoreImageRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::StoreImageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredMetadata(::grpc::ServerContext* context, ::bosdyn::api::ListStoredMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::ListStoredMetadataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreMetadata(::grpc::ServerContext* context, ::bosdyn::api::StoreMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::StoreMetadataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredAlertData(::grpc::ServerContext* context, ::bosdyn::api::ListStoredAlertDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::ListStoredAlertDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreAlertData(::grpc::ServerContext* context, ::bosdyn::api::StoreAlertDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::bosdyn::api::StoreAlertDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListCaptureActions<WithAsyncMethod_ListStoredData<WithAsyncMethod_StoreData<WithAsyncMethod_ListStoredImages<WithAsyncMethod_StoreImage<WithAsyncMethod_ListStoredMetadata<WithAsyncMethod_StoreMetadata<WithAsyncMethod_ListStoredAlertData<WithAsyncMethod_StoreAlertData<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListCaptureActionsRequest, ::bosdyn::api::ListCaptureActionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::ListCaptureActionsRequest* request, ::bosdyn::api::ListCaptureActionsResponse* response) { return this->ListCaptureActions(context, request, response); }));}
    void SetMessageAllocatorFor_ListCaptureActions(
        ::grpc::MessageAllocator< ::bosdyn::api::ListCaptureActionsRequest, ::bosdyn::api::ListCaptureActionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListCaptureActionsRequest, ::bosdyn::api::ListCaptureActionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCaptureActions(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListStoredData() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredDataRequest, ::bosdyn::api::ListStoredDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::ListStoredDataRequest* request, ::bosdyn::api::ListStoredDataResponse* response) { return this->ListStoredData(context, request, response); }));}
    void SetMessageAllocatorFor_ListStoredData(
        ::grpc::MessageAllocator< ::bosdyn::api::ListStoredDataRequest, ::bosdyn::api::ListStoredDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredDataRequest, ::bosdyn::api::ListStoredDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredData(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreData() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreDataRequest, ::bosdyn::api::StoreDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::StoreDataRequest* request, ::bosdyn::api::StoreDataResponse* response) { return this->StoreData(context, request, response); }));}
    void SetMessageAllocatorFor_StoreData(
        ::grpc::MessageAllocator< ::bosdyn::api::StoreDataRequest, ::bosdyn::api::StoreDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreDataRequest, ::bosdyn::api::StoreDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreData(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredImagesRequest, ::bosdyn::api::ListStoredImagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::ListStoredImagesRequest* request, ::bosdyn::api::ListStoredImagesResponse* response) { return this->ListStoredImages(context, request, response); }));}
    void SetMessageAllocatorFor_ListStoredImages(
        ::grpc::MessageAllocator< ::bosdyn::api::ListStoredImagesRequest, ::bosdyn::api::ListStoredImagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredImagesRequest, ::bosdyn::api::ListStoredImagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredImages(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreImage() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreImageRequest, ::bosdyn::api::StoreImageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::StoreImageRequest* request, ::bosdyn::api::StoreImageResponse* response) { return this->StoreImage(context, request, response); }));}
    void SetMessageAllocatorFor_StoreImage(
        ::grpc::MessageAllocator< ::bosdyn::api::StoreImageRequest, ::bosdyn::api::StoreImageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreImageRequest, ::bosdyn::api::StoreImageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreImage(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredMetadataRequest, ::bosdyn::api::ListStoredMetadataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::ListStoredMetadataRequest* request, ::bosdyn::api::ListStoredMetadataResponse* response) { return this->ListStoredMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_ListStoredMetadata(
        ::grpc::MessageAllocator< ::bosdyn::api::ListStoredMetadataRequest, ::bosdyn::api::ListStoredMetadataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredMetadataRequest, ::bosdyn::api::ListStoredMetadataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreMetadataRequest, ::bosdyn::api::StoreMetadataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::StoreMetadataRequest* request, ::bosdyn::api::StoreMetadataResponse* response) { return this->StoreMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_StoreMetadata(
        ::grpc::MessageAllocator< ::bosdyn::api::StoreMetadataRequest, ::bosdyn::api::StoreMetadataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreMetadataRequest, ::bosdyn::api::StoreMetadataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredAlertDataRequest, ::bosdyn::api::ListStoredAlertDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::ListStoredAlertDataRequest* request, ::bosdyn::api::ListStoredAlertDataResponse* response) { return this->ListStoredAlertData(context, request, response); }));}
    void SetMessageAllocatorFor_ListStoredAlertData(
        ::grpc::MessageAllocator< ::bosdyn::api::ListStoredAlertDataRequest, ::bosdyn::api::ListStoredAlertDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::ListStoredAlertDataRequest, ::bosdyn::api::ListStoredAlertDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredAlertData(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreAlertDataRequest, ::bosdyn::api::StoreAlertDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bosdyn::api::StoreAlertDataRequest* request, ::bosdyn::api::StoreAlertDataResponse* response) { return this->StoreAlertData(context, request, response); }));}
    void SetMessageAllocatorFor_StoreAlertData(
        ::grpc::MessageAllocator< ::bosdyn::api::StoreAlertDataRequest, ::bosdyn::api::StoreAlertDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bosdyn::api::StoreAlertDataRequest, ::bosdyn::api::StoreAlertDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreAlertData(
      ::grpc::CallbackServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ListCaptureActions<WithCallbackMethod_ListStoredData<WithCallbackMethod_StoreData<WithCallbackMethod_ListStoredImages<WithCallbackMethod_StoreImage<WithCallbackMethod_ListStoredMetadata<WithCallbackMethod_StoreMetadata<WithCallbackMethod_ListStoredAlertData<WithCallbackMethod_StoreAlertData<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListStoredData() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreData() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreImage() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCaptureActions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListStoredData() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreData() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredImages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreImage() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreImage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListStoredAlertData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStoreAlertData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCaptureActions(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCaptureActions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListStoredData() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListStoredData(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreData() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreData(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListStoredImages(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredImages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreImage() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreImage(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreImage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListStoredMetadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreMetadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListStoredAlertData(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListStoredAlertData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StoreAlertData(context, request, response); }));
    }
    ~WithRawCallbackMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StoreAlertData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCaptureActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCaptureActions() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::ListCaptureActionsRequest, ::bosdyn::api::ListCaptureActionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::ListCaptureActionsRequest, ::bosdyn::api::ListCaptureActionsResponse>* streamer) {
                       return this->StreamedListCaptureActions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCaptureActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCaptureActions(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListCaptureActionsRequest* /*request*/, ::bosdyn::api::ListCaptureActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCaptureActions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::ListCaptureActionsRequest,::bosdyn::api::ListCaptureActionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListStoredData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListStoredData() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::ListStoredDataRequest, ::bosdyn::api::ListStoredDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::ListStoredDataRequest, ::bosdyn::api::ListStoredDataResponse>* streamer) {
                       return this->StreamedListStoredData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListStoredData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListStoredData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredDataRequest* /*request*/, ::bosdyn::api::ListStoredDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListStoredData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::ListStoredDataRequest,::bosdyn::api::ListStoredDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreData() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::StoreDataRequest, ::bosdyn::api::StoreDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::StoreDataRequest, ::bosdyn::api::StoreDataResponse>* streamer) {
                       return this->StreamedStoreData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreDataRequest* /*request*/, ::bosdyn::api::StoreDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::StoreDataRequest,::bosdyn::api::StoreDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListStoredImages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListStoredImages() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::ListStoredImagesRequest, ::bosdyn::api::ListStoredImagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::ListStoredImagesRequest, ::bosdyn::api::ListStoredImagesResponse>* streamer) {
                       return this->StreamedListStoredImages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListStoredImages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListStoredImages(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredImagesRequest* /*request*/, ::bosdyn::api::ListStoredImagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListStoredImages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::ListStoredImagesRequest,::bosdyn::api::ListStoredImagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreImage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreImage() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::StoreImageRequest, ::bosdyn::api::StoreImageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::StoreImageRequest, ::bosdyn::api::StoreImageResponse>* streamer) {
                       return this->StreamedStoreImage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreImage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreImage(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreImageRequest* /*request*/, ::bosdyn::api::StoreImageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreImage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::StoreImageRequest,::bosdyn::api::StoreImageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListStoredMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListStoredMetadata() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::ListStoredMetadataRequest, ::bosdyn::api::ListStoredMetadataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::ListStoredMetadataRequest, ::bosdyn::api::ListStoredMetadataResponse>* streamer) {
                       return this->StreamedListStoredMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListStoredMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListStoredMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredMetadataRequest* /*request*/, ::bosdyn::api::ListStoredMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListStoredMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::ListStoredMetadataRequest,::bosdyn::api::ListStoredMetadataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreMetadata() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::StoreMetadataRequest, ::bosdyn::api::StoreMetadataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::StoreMetadataRequest, ::bosdyn::api::StoreMetadataResponse>* streamer) {
                       return this->StreamedStoreMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreMetadata(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreMetadataRequest* /*request*/, ::bosdyn::api::StoreMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::StoreMetadataRequest,::bosdyn::api::StoreMetadataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListStoredAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListStoredAlertData() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::ListStoredAlertDataRequest, ::bosdyn::api::ListStoredAlertDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::ListStoredAlertDataRequest, ::bosdyn::api::ListStoredAlertDataResponse>* streamer) {
                       return this->StreamedListStoredAlertData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListStoredAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListStoredAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::ListStoredAlertDataRequest* /*request*/, ::bosdyn::api::ListStoredAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListStoredAlertData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::ListStoredAlertDataRequest,::bosdyn::api::ListStoredAlertDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StoreAlertData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StoreAlertData() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bosdyn::api::StoreAlertDataRequest, ::bosdyn::api::StoreAlertDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bosdyn::api::StoreAlertDataRequest, ::bosdyn::api::StoreAlertDataResponse>* streamer) {
                       return this->StreamedStoreAlertData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StoreAlertData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StoreAlertData(::grpc::ServerContext* /*context*/, const ::bosdyn::api::StoreAlertDataRequest* /*request*/, ::bosdyn::api::StoreAlertDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStoreAlertData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bosdyn::api::StoreAlertDataRequest,::bosdyn::api::StoreAlertDataResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ListCaptureActions<WithStreamedUnaryMethod_ListStoredData<WithStreamedUnaryMethod_StoreData<WithStreamedUnaryMethod_ListStoredImages<WithStreamedUnaryMethod_StoreImage<WithStreamedUnaryMethod_ListStoredMetadata<WithStreamedUnaryMethod_StoreMetadata<WithStreamedUnaryMethod_ListStoredAlertData<WithStreamedUnaryMethod_StoreAlertData<Service > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ListCaptureActions<WithStreamedUnaryMethod_ListStoredData<WithStreamedUnaryMethod_StoreData<WithStreamedUnaryMethod_ListStoredImages<WithStreamedUnaryMethod_StoreImage<WithStreamedUnaryMethod_ListStoredMetadata<WithStreamedUnaryMethod_StoreMetadata<WithStreamedUnaryMethod_ListStoredAlertData<WithStreamedUnaryMethod_StoreAlertData<Service > > > > > > > > > StreamedService;
};

}  // namespace api
}  // namespace bosdyn


#endif  // GRPC_bosdyn_2fapi_2fdata_5facquisition_5fstore_5fservice_2eproto__INCLUDED
